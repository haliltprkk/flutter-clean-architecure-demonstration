// Mocks generated by Mockito 5.3.2 from annotations
// in clean_architecture_demonstration/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:clean_architecture_demonstration/data/character_detail/api_service/character_detail_api_service.dart'
    as _i9;
import 'package:clean_architecture_demonstration/data/character_list/api_service/character_list_api_service.dart'
    as _i7;
import 'package:clean_architecture_demonstration/data/character_list/model/character_dto.dart'
    as _i4;
import 'package:clean_architecture_demonstration/data/character_list/model/character_list_dto.dart'
    as _i2;
import 'package:clean_architecture_demonstration/domain/character_detail/character_detail_repository.dart'
    as _i8;
import 'package:clean_architecture_demonstration/domain/character_list/character_list_repository.dart'
    as _i5;
import 'package:clean_architecture_demonstration/domain/character_list/character_model.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCharacterListDto_0 extends _i1.SmartFake
    implements _i2.CharacterListDto {
  _FakeCharacterListDto_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCharacterModel_1 extends _i1.SmartFake
    implements _i3.CharacterModel {
  _FakeCharacterModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCharacterDto_2 extends _i1.SmartFake implements _i4.CharacterDto {
  _FakeCharacterDto_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CharacterListRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCharacterListRepository extends _i1.Mock
    implements _i5.CharacterListRepository {
  MockCharacterListRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<List<_i3.CharacterModel>> getCharacters() => (super.noSuchMethod(
        Invocation.method(
          #getCharacters,
          [],
        ),
        returnValue:
            _i6.Future<List<_i3.CharacterModel>>.value(<_i3.CharacterModel>[]),
      ) as _i6.Future<List<_i3.CharacterModel>>);
}

/// A class which mocks [CharacterListApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCharacterListApiService extends _i1.Mock
    implements _i7.CharacterListApiService {
  MockCharacterListApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.CharacterListDto> getCharacters() => (super.noSuchMethod(
        Invocation.method(
          #getCharacters,
          [],
        ),
        returnValue:
            _i6.Future<_i2.CharacterListDto>.value(_FakeCharacterListDto_0(
          this,
          Invocation.method(
            #getCharacters,
            [],
          ),
        )),
      ) as _i6.Future<_i2.CharacterListDto>);
}

/// A class which mocks [CharacterDetailRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCharacterDetailRepository extends _i1.Mock
    implements _i8.CharacterDetailRepository {
  MockCharacterDetailRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i3.CharacterModel> getCharacterById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCharacterById,
          [id],
        ),
        returnValue: _i6.Future<_i3.CharacterModel>.value(_FakeCharacterModel_1(
          this,
          Invocation.method(
            #getCharacterById,
            [id],
          ),
        )),
      ) as _i6.Future<_i3.CharacterModel>);
}

/// A class which mocks [CharacterDetailApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCharacterDetailApiService extends _i1.Mock
    implements _i9.CharacterDetailApiService {
  MockCharacterDetailApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i4.CharacterDto> getCharacter(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getCharacter,
          [id],
        ),
        returnValue: _i6.Future<_i4.CharacterDto>.value(_FakeCharacterDto_2(
          this,
          Invocation.method(
            #getCharacter,
            [id],
          ),
        )),
      ) as _i6.Future<_i4.CharacterDto>);
}
